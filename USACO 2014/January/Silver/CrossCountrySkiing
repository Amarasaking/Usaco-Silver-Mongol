#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
ll a[1002][1002], b[1002][1002], A[1002][1002];
ll n, m;
bool In(ll x, ll y) {
	if ( x >= 1 && x <= n && y >= 1 && y <= m && A[x][y] == 0) return true;
	return false;
}
void Dfs(ll x, ll y, ll& delta) {
	A[x][y] = 1;
	if ( abs(a[x][y]- a[x + 1][y]) <= delta && In(x +1, y)) {
		Dfs(x + 1, y, delta);
	}
	if ( abs(a[x][y]- a[x - 1][y]) <= delta && In(x -1, y)) {
		Dfs(x - 1, y, delta);
	}
	if ( abs(a[x][y]- a[x][y + 1]) <= delta && In(x, y + 1)) {
		Dfs(x, y + 1, delta);
	}
	if ( abs(a[x][y]- a[x][y - 1]) <= delta && In(x, y - 1)) {
		Dfs(x, y - 1, delta);
	}
	return ;
}
bool Check(ll x) {
	ll i, j;
	bool found = false;
	for (i = 1; i <= n; i ++) for (j = 1; j <= m; j ++) A[i][j] = 0;
	for (i = 1; i <= n; i ++) {
		for (j = 1; j <= m; j ++) {
			if ( b[i][j] == 1) {
				if ( found ) {
					if ( A[i][j] == 0) return false;
					continue;
				}
				found = true;
				Dfs(i, j, x);
			}
		}
	}
	return true;
}
int main() {
	freopen("ccski.in", "r", stdin);
	freopen("ccski.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll t, ans, sum, x, y, r, i, j, max_p, max_s, mid, lo, hi;
	
	cin >> n >> m;
	
	for (i = 1; i <= n; i ++) {
		for (j = 1; j <= m; j ++) cin >> a[i][j];
	}
	for (i = 1; i <= n; i ++) {
		for (j = 1; j <= m; j ++) {
			cin >> b[i][j];
		}
	}
	lo = 0;
	hi = 1e9;
	while ( lo < hi) {
		mid = (lo + hi)/2;
		if (!Check(mid)) lo = mid + 1;
		else hi = mid;
	}
	cout << lo << endl;
	
}
