#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
int main() {
			freopen("convention2.in", "r", stdin);
	freopen("convention2.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll t, n, m, ans, s, sum, x, y, r, p, i, j;
	
	
	cin >> n;
	
	vector < pair < ll, pair < ll, ll > > > q;
	for (i = 1; i <= n; i ++) {
		cin >> x >> y;
		q.push_back({x, make_pair(y, i)});
	}
	sort(q.begin(), q.end());
	
	queue < pair < ll, ll > > Q;
	priority_queue < pair < ll, pair < ll, ll > > > pq;
	r = 0;
	ans = 0;
	for (i =0; i < n; i ++) {
		if(pq.empty()) {
			ans = max(ans, r - q[i].first);
		//	cout << q[i].second.second << " " << q[i].first << " " << q[i].second.first << endl;
			r = max(r, q[i].first) + q[i].second.first;
			i ++;
			while (i < n && q[i].first <= r) {
				pq.push(make_pair(-q[i].second.second,make_pair(q[i].first, q[i].second.first)));
				i ++;
			}
			i --;
		}
		else {
			auto P = pq.top();
		//	cout << -P.first<< " " << P.second.first << " " << P.second.second <<"." << endl;
			pq.pop();
			ans = max(ans, r - P.second.first);
			r = max(r, P.second.first) + P.second.second;
			while (i < n && q[i].first <= r) {
				pq.push(make_pair(-q[i].second.second,make_pair(q[i].first, q[i].second.first)));
				i ++;
			}
			i --;
			
		}
		//cout <<r  << endl;
	}
	cout << ans << endl;
}
