#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
ll dp[1048578], T[22], C[22];
int main() {
	freopen("movie.in", "r", stdin);
	freopen("movie.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll t, n, m, ans, s, sum, x, y, r, p, i, j, L;
	
	cin >> n >> L;
	
	vector < ll > v[22];
	for (i = 0; i < n; i ++) {
		cin >> T[i] >> C[i];
		for (j = 0; j < C[i]; j ++) {
			cin >> x;
			v[i].push_back(x);
		}
	}
	memset(dp, -64, sizeof dp);
	dp[0] = 0;
	ans = 30;
	for (i = 0; i < (1 << n); i ++) {
		for (j = 0; j < n; j ++) {
			if ( i & (1 << j) ) {
				r = i ^ (1 << j);
			//	cout << i << " " << r << endl;
				
				s = upper_bound(v[j].begin(), v[j].end(), dp[r]) - v[j].begin();
			//	cout << s << " " << v[j][s] << endl;
				s --;
				if ( s != -1) {
					dp[i] = max(dp[i], v[j][s] + T[j]);					
				}
			}
		}
	//	cout << i << " " << dp[i] << endl;
		if ( dp[i] >= L) {
			r = __builtin_popcount(i);
			ans = min(ans, r);
		}
	}
	if ( ans > n) {
		cout << -1 << endl;
		return 0;
	}
	cout << ans << endl;
}
