#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
const int N = 105;

ll dp[N][N];
ll a[2 * N], n, m, b[N];

ll Go(ll x) {
	ll i, p, sum, ans, j, r;
	for (i = 1; i <= n; i ++) b[i] = a[x + i - 1];
	for (i = 1; i <= 100; i ++) for (j = 0; j <= 7; j ++) dp[i][j] = 1e18;
	
	/*
	p = sum =0;
	for (i = 1; i <= n; i ++) {
		sum += b[i];
		p += sum;
		dp[i][1] = p; 
	}
	*/
	for (i = 1; i <= n; i ++) {
		for (j = 1; j <= m; j ++) {
			sum = p = 0;
			for (r = i - 1; r >= 0; r --) {
				dp[i][j] = min(dp[i][j], dp[r][j - 1] + p);
				sum += b[r + 1];
				p += sum;
			}	
		}
	}
	ans = 1e18;
	for (i = 1; i <= m; i ++) ans= min(ans, dp[n][i]);
	return ans;
}

void Solve() {
	ll k, i, ans, j, r, Sum, Max, MAx;
	
	cin >> n >> m;
	
	for (i = 1; i <= n; i ++) {
		cin >> a[i];
		a[i + n] = a[i];
	}
	ans = 1e18;
	for (i = 1; i <= n; i ++) {
		ans = min(ans, Go(i));
	}
	cout << ans << endl;
	
	
}



int main() {
	freopen("cbarn2.in", "r", stdin);
	freopen("cbarn2.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	Solve();
}
