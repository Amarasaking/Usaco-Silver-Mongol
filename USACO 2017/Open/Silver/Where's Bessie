#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
ll a[24][24], Used[25][25];
ll stx, sty, fnx, fny;

bool CanGo(ll x, ll y) {
	if (x < stx || y > fny || x > fnx || y < sty || Used[x][y] == 1) return false;
	return true;
}

void Go(ll x, ll y) {
	Used[x][y] = 1;
	if ( CanGo(x, y + 1) && a[x][y] == a[x][y + 1]) Go(x, y + 1);
	if ( CanGo(x, y - 1) && a[x][y] == a[x][y - 1]) Go(x, y - 1);
	if ( CanGo(x + 1, y) && a[x][y] == a[x + 1][y]) Go(x + 1, y);
	if ( CanGo(x - 1, y) && a[x][y] == a[x - 1][y]) Go(x - 1, y);
}

bool Check() {
	ll A[30]= {0}, i, j, s, p;
	for (i = stx; i <= fnx; i ++) {
		for (j = sty; j <= fny; j ++) {
			Used[i][j] = 0;
		}
	}
	for (i = stx; i <= fnx; i ++) {
		for (j = sty; j <= fny; j ++) {
			if ( Used[i][j] == 0) {
				Go(i, j);
				A[a[i][j]] ++;
			}
		}
	}
	s = 0;
	p= 0;
	for (i = 0; i <= 26; i ++) {
		if ( A[i] == 0) continue;
		s += (min(1ll, A[i]));
		if ( A[i] == 1) p ++;
	}
	if ( p ==1 && s == 2) return true;
	return false;
}

int main() {
	freopen("where.in", "r", stdin);
	freopen("where.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll t, n, m, ans, s, sum, x, y, r, p, i, j, I, J;

	cin >> n;
	
	string str[n + 2];
	
	for (i = 1; i <= n; i ++) {
		cin >> str[i];
		for (j = 0; j < n; j ++) {
			r = str[i][j] - 'A' + 1;
			a[i][j + 1] = r;
		}
	}	
	vector < pair < pair < ll, ll > , pair < ll, ll > > > Co;
	for (i = 1; i <= n; i ++) {
		for (j = 1; j <= n; j ++) {
			for ( I = i; I <= n; I ++) {
				for (J = j; J <= n; J ++) {
					stx = i;
					sty = j;
					fnx = I;
					fny = J;
					if ( Check() ) {
						Co.push_back({{i, j}, {I, J}});
					}
				}
			}
		}
	}
	ans= 0;
	for (i = 0; i < Co.size(); i ++) {
		ans ++;
		for (j = 0; j < Co.size(); j ++) {
			if (i == j) continue;
			if ( Co[i].first.first >= Co[j].first.first &&  Co[i].first.second >= Co[j].first.second &&  Co[i].second.first <= Co[j].second.first &&  Co[i].second.second <= Co[j].second.second ) {
				ans --;
				break;				
			}
		}
	}
	cout << ans << endl;
}
