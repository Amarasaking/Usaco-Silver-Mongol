#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
/*
1-n hurtelh bogin zamiig djikstra-iin algorithmaar olno.
tegeed ene-n hamgiin ihdee 100 urttai ba
ter 100 zam burd tus burin huwid 2oor urjuulj 1-ees n hurtelh bogin zamiig djikstragaar dahij oloh ba ed narin max hariunaas anhnii djikstra-aar olson hariugaa hasna
herwee anhnii djikstra-gaas uusen hamgin bogino zamd baigaag l oorchilohgui bol busad ymar ch zamiig 2 dahin ihesgene anhnii bogino zam heweer uldene;
*/

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	int t, n, m, ans, s, sum, x,price, y, r, p, i, j;

	cin >> n >> m;
	
	int P[n +2][n +2];
	vector < ll > v[n + 2];
	for (i = 1; i <= n; i ++) for (j = 1; j <= n; j ++) {
		if ( i != j) P[i][j] = 1e9;
		else P[i][i] = 0;
	}
	for (i = 1; i <= m; i ++) {
		cin >> x >> y >> price;
		v[x].push_back(y);
		v[y].push_back(x);
		P[x][y] = P[y][x] = price;
	}
	queue < ll > q;
	
	q.push(1);
	ll Come[n + 2], A[n + 2];
	for (i = 1; i <= n; i ++) {
		A[i] = Come[i] = 1e9;
	}
	A[1] =0;
	while(!q.empty()) {
		r =q.front();
		q.pop();
		for ( i = 0; i < v[r].size(); i ++) {
			s = v[r][i];
			p = P[r][s];
			if ( A[s] > A[r] + p) {
				A[s] = A[r] + p;
				Come[s] = r;
				q.push(s);
			}
		}
	}
	map < ll, ll > Has[102];
	ll Pe, S;
	Pe = n;
	ll Ans = A[n];
	ll R = Ans;
	while ( Come[Pe] != 1e9) {
		S = Come[Pe];
		for (i = 2; i <= n; i ++) A[i] = 1e9;
		A[1] = 0;
		P[S][Pe] = P[Pe][S] = 2 * P[S][Pe];
		q.push(1);
		while(!q.empty()) {
			r =q.front();
			q.pop();
			for ( i = 0; i < v[r].size(); i ++) {
				s = v[r][i];
				p = P[r][s];
				if ( A[s] > A[r] + p) {
					A[s] = A[r] + p;
					q.push(s);
				}
			}
		}
		P[S][Pe] /= 2;
		P[Pe][S]/=2;
		R = max (R, A[n]);
		Pe = S;
	}
	cout << R - Ans << endl;
}
