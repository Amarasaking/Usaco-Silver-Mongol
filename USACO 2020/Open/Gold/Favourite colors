#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
vector < ll > adj[200006];
ll ataman[200006];
ll Used[200005] = {0};
queue < ll > q;
ll Get(ll x) {
	if ( x == ataman[x]) return x;
	return ataman[x] = Get(ataman[x]);
}

void Unite(ll x, ll y) {
	x = Get(x);
	y = Get(y);
	if ( x == y) return ;
	if ( adj[x].size() > adj[y].size()) swap(x, y);
	for ( int X : adj[x]) adj[y].push_back(X);
	adj[x].clear();
	ataman[x] = y;
	if ( adj[y].size() > 1) q.push(y);
	return ;
}

int main() {
	freopen("fcolor.in", "r", stdin);
	freopen("fcolor.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll t, n, m, ans, s, sum, x, y, r, p, i, j;
	
	cin >> n >> m;
	
	for (i = 1; i <= n; i ++) ataman[i] = i;
	for (i= 1; i <= m; i ++) {
		cin >> x >> y;
		adj[x].push_back(y);
	}
	
	
	for (i = 1; i <= n; i ++) {
		if ( adj[i].size() > 1) {
			q.push(i);
		}
	}
	while ( !q.empty()) {
		r = q.front();
		if ( adj[r].size() < 2) {
			q.pop();
			continue;
		}
		s = adj[r].back();
		adj[r].pop_back();
		Unite(adj[r].back(), s);
		
	}
	
	p = 0;
	for (i = 1; i <= n; i ++) {
		if ( Used[Get(i)] == 0) {
			Used[Get(i)] = ++p;
		}
		cout << Used[Get(i)] << endl;
	}
}
