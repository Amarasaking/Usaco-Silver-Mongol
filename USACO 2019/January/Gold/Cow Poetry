#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
ll mod = 1e9 + 7;
ll dp[3][5002];

ll Pow(ll x, ll y) {
	if ( y == 0) return 1;
	if ( y == 1) return x;
	ll r;
	r = Pow(x, y/2);
	r = (r * r) % mod;
	if ( y % 2 == 1) r = r * x;
	r %= mod;
	return r;
}
int main() {
	freopen("poetry.in", "r", stdin);
	freopen("poetry.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	ll N, R, M, K,ans,p, i, r, j, now, last;
	
	cin >> N >> M >> K;
	
	ll s[N + 2], c[N + 2]; 
	vector < ll > v[N + 2];
	
	for (i = 1; i <= N; i ++) {
		cin >> s[i] >> c[i];
		v[c[i]].push_back(s[i]);
	}
	
	dp[0][0] = 1;
	dp[1][0] = 1;
	now = 0;
	last = 1;
	for (i = 0; i <= K; i ++) {
		now ^= 1;
		last ^= 1;
		dp[now][i] = dp[last][i];
		for (j = 1; j <= N; j ++) {
			r = s[j];
			if ( i >= r) {
				dp[now][i] = (dp[now][i] + dp[last][i - r] ) % mod;
			}
		}
		dp[last][i] = dp[now][i];
	}
	char ch[M + 2];
	ll CH[30] = {0};
	for (i = 1; i <= M; i ++) {
		cin >> ch[i];
		r = ch[i] -'A';
		CH[r] ++;
	}
	vector < ll > q;
	for (i = 1; i <= N; i ++) {
		if ( v[i].size() == 0) continue;
		p = 0;
		for (j = 0; j < v[i].size(); j ++) {
			p = (p + dp[now][K - v[i][j]]) % mod;
		}
		q.push_back(p);
	}
	ans = 1;
	for ( i = 0; i <= 25; i ++) {
		R = CH[i];
		if ( R == 0) continue;
		p = 0;
		for (j = 0; j < q.size(); j ++) {
			p = (p + Pow(q[j], R))% mod;
		}
		ans = ans * p;
		ans %= mod;
	}
	cout << ans << endl;
}
