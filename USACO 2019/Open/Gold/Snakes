#include<bits/stdc++.h>

using namespace std;
using ll = long long ;
const int N = 405;

ll dp[N][N];
void Solve() {
	ll n, k, i, j, r, Sum, Max, MAx;
	
	cin >> n >> k;
	
	ll a[n + 2];
	
	for (i = 1; i <= n; i ++) {
		cin >> a[i];
	}
	for (i = 1; i <= N; i ++) for (j = 1; j <= N; j++) dp[i][j] = 1e9;
	Max = 0;
	Sum = 0;
	for (i = 1; i <= n; i ++) {
		Max = max(Max, a[i]);
		Sum += a[i];
		dp[i][0] = Max * i;
		for (j = k; j >= 1; j --) {
			MAx = 0;
			for ( r = i - 1; r >= 1; r --) {
				MAx = max(MAx, a[r + 1]);
				dp[i][j] = min(dp[i][j], dp[r][j - 1] + MAx * (i - r)); 
			}
		}
	}
	cout << dp[n][k] - Sum << endl;
	
}



int main() {
	freopen("snakes.in", "r", stdin);
	freopen("snakes.out", "w", stdout);
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	Solve();
}
